name: Build and Sign iOS .ipa

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.24.2'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Download Certificate and Provisioning Profile
      - name: Download Certificate and Provisioning Profile
        run: |
          curl -o certificate.p12 "${{ secrets.CERTIFICATE_URL }}"
          curl -o embedded.mobileprovision "${{ secrets.PROVISIONING_PROFILE_URL }}"
        env:
          CERTIFICATE_URL: ${{ secrets.CERTIFICATE_URL }}
          PROVISIONING_PROFILE_URL: ${{ secrets.PROVISIONING_PROFILE_URL }}

      # Step 5: Import Certificate
      - name: Import Certificate
        run: |
          security import certificate.p12 -P "${{ secrets.CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security find-identity -p codesigning -v

      # Step 6: Set up Provisioning Profile
      - name: Set up Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp embedded.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # Step 7: Build iOS app (signed)
      - name: Build iOS app (signed)
        run: flutter build ios --release --no-codesign
      # Step: Create Entitlements File
      - name: Create Entitlements File
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > ios/Runner/Runner.entitlements
          echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> ios/Runner/Runner.entitlements
          echo '<plist version="1.0">' >> ios/Runner/Runner.entitlements
          echo '  <dict>' >> ios/Runner/Runner.entitlements
          echo '    <key>aps-environment</key>' >> ios/Runner/Runner.entitlements
          echo '    <string>production</string>' >> ios/Runner/Runner.entitlements
          echo '  </dict>' >> ios/Runner/Runner.entitlements
          echo '</plist>' >> ios/Runner/Runner.entitlements
      # Step: Verify Working Directory and Entitlements File
      - name: Verify Working Directory and Entitlements File
        run: |
          pwd
          ls -l ios/Runner
          cat ios/Runner/Runner.entitlements

      # Step: Sign the iOS app
      - name: Sign iOS app
        run: |
          cd build/ios/iphoneos
          # Verify identity and entitlements file path
          security find-identity -p codesigning
          codesign -f -s "Apple Distribution: James Oldwoods (N985XLQHFY)" --provisioning-profile "~/Library/MobileDevice/Provisioning Profiles/embedded.mobileprovision" --entitlements /Users/runner/work/flutter_wallpaper_glass_alpha/flutter_wallpaper_glass_alpha/ios/Runner/Runner.entitlements Runner.app

      # Step 9: Create IPA Package
      - name: Create IPA Package
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r Runner-signed.ipa Payload
          mv Runner-signed.ipa ../

      # Step 10: Upload Signed IPA as Artifact
      - name: Upload Signed IPA
        uses: actions/upload-artifact@v3
        with:
          name: Runner-signed.ipa
          path: build/ios/Runner-signed.ipa
