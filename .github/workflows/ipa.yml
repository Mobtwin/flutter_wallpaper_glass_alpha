name: Build and Sign iOS .ipa

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest  # macOS runner is required for iOS builds

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Flutter
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: '3.24.2'

    - name: Install dependencies
      run: flutter pub get

    # Build the iOS app
    - name: Build iOS app (unsigned)
      run: flutter build ios --release --no-codesign

    # Decode and install the Apple Certificate
    - name: Install Apple Certificate
      run: |
        echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
        security import certificate.p12 -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "$APPLE_CERTIFICATE_PASSWORD" ~/Library/Keychains/login.keychain-db
      shell: bash

    # Decode and install the Provisioning Profile
    - name: Install Provisioning Profile
      run: |
        echo "$PROVISIONING_PROFILE" | base64 --decode > embedded.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp embedded.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
      shell: bash

    # Sign the App
    - name: Sign the App
      run: |
        cd build/ios/iphoneos
        codesign -f -s "Apple Distribution" --entitlements Runner.app/archived-expanded-entitlements.xcent --timestamp=none Runner.app
      shell: bash

    # Create IPA Package
    - name: Create IPA Package
      run: |
        cd build/ios/iphoneos
        mkdir Payload
        mv Runner.app Payload/
        zip -r Runner.ipa Payload
        mv Runner.ipa ../
      shell: bash

    # Upload the IPA as an artifact
    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Runner.ipa
        path: build/ios/Runner.ipa
